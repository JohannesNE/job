% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/job.R
\name{job}
\alias{job}
\title{Conveniently run R code as an RStudio job}
\usage{
job(..., import = ls(), packages = .packages(), title = NULL)
}
\arguments{
\item{...}{A named or unnamed code block. Named code blocks will have the result
assigned to that name in \code{globalenv()} upon completion. Unnamed code blocks
will not return anything. See examples.}

\item{import}{A vector of un-quoted variables to import into the job. E.g.,
\code{c(var1, var2)}. \code{ls()} (default) means "all" and \code{c()} is "nothing".}

\item{packages}{Character vector of packages to load in the job. Defaults to
all loaded packages in the calling environment. You can achieve the same
effect by writing \code{library(my_package)} in the code block.}

\item{title}{The job title. If \code{NULL} (default), use the name of \code{...} if set
or \code{"(untitled)"} if \code{...} is unnamed.}
}
\value{
NULL but an environment is assigned if the code block is named. This
environment will include everything defined in the code block but excluding - not
"untouched" imports. See \code{...}.
}
\description{
Conveniently run R code as an RStudio job
}
\details{
This is a wrapper around \code{rstudioapi::jobRunScript}.

\strong{Large objects:}\code{jobRunScript} is very
slow at importing and exporting large objects. Re importing, \code{as_job} does
sets \code{importEnv = FALSE} and passes data through a temporary .rds file.
Re exporting, I recommend saving large objects to an .rds file and \code{rm()} it
from the job so it isn't returned.

\strong{Deletes import-names:} Upon completion, it calls \code{rm()}s all imports. So
avoid assigning variable names that are imported.
}
\examples{
if (rstudioapi::isAvailable()) {
  # From globalenv
  global_var = 5
  job(result = {
    x = rnorm(global_var)
    print("This text goes to the job console")
    m = mean(x)
  })

  # later:
  print(as.list(result))
  result$m


  # Run without assigning anything to the calling environment
  job({
    result = rbind(mtcars, mtcars)
    print(mean(result$mpg))
    # saveRDS(result, "job_result.rds")
  })


  # Specify imports and (no) packages
  my_df = data.frame(names = c("alice", "bob"))
  ignore_var = 15
  job(result2 = {
    if (file.exists("ignore_var") == FALSE)
      print("ignore_var is not set here")

    names = rep(my_df$names, global_var)
  }, import = c(global_var, my_df), packages = c())

  # later
  result2$names
}
}
\author{
Jonas Kristoffer Lindel√∏v
}
